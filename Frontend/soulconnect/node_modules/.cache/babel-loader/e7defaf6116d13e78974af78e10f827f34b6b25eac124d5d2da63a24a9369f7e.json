{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\BeerCasus\\\\BeerCasus\\\\.git\\\\SoulConnect\\\\Frontend\\\\soulconnect\\\\src\\\\Berichten\\\\bericht.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { messages as initialMessages } from './messages'; // Import initial messages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const {\n    messageId\n  } = useParams(); // Retrieve the messageId from the URL\n  const [messages, setMessages] = useState(initialMessages); // Use state for messages\n  const [newMessage, setNewMessage] = useState(''); // State for the new message input\n\n  // Filter messages for the current contact\n  const contactMessages = messages.filter(msg => msg.sender === messageId && msg.receiver === 'You' || msg.receiver === messageId && msg.sender === 'You');\n\n  // Sort messages by timestamp\n  const sortedMessages = contactMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n  // Handle sending a new message\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') return; // Prevent empty messages\n\n    // Create a new message object\n    const newMessageObject = {\n      id: messages.length + 1,\n      // Generate a new ID (can be replaced later with backend ID)\n      sender: 'You',\n      receiver: messageId,\n      message: newMessage,\n      timestamp: new Date().toISOString(),\n      // Current timestamp\n      profilePicture: '/path-to-your-profile-picture.jpg' // Replace with an actual path or logic\n    };\n\n    // Update the state to include the new message\n    setMessages(prevMessages => [...prevMessages, newMessageObject]);\n    setNewMessage(''); // Clear the input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", messageId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sortedMessages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: '10px',\n          justifyContent: msg.sender === 'You' ? 'flex-end' : 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.profilePicture,\n          alt: `${msg.sender}'s profile`,\n          style: {\n            width: '50px',\n            height: '50px',\n            borderRadius: '50%',\n            marginLeft: msg.sender === 'You' ? '0' : '10px',\n            marginRight: msg.sender === 'You' ? '10px' : '0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: msg.sender === 'You' ? '#007bff' : '#f1f1f1',\n            color: msg.sender === 'You' ? 'white' : 'black',\n            padding: '10px',\n            borderRadius: '10px',\n            maxWidth: '70%',\n            wordWrap: 'break-word'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(msg.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message\",\n        style: {\n          width: '80%',\n          padding: '10px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        style: {\n          padding: '10px 20px',\n          cursor: 'pointer'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"jsQ0l5JvhOdZNcCE7NlsCh3j+NA=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useParams","messages","initialMessages","jsxDEV","_jsxDEV","ChatPage","_s","messageId","setMessages","newMessage","setNewMessage","contactMessages","filter","msg","sender","receiver","sortedMessages","sort","a","b","Date","timestamp","handleSendMessage","trim","newMessageObject","id","length","message","toISOString","profilePicture","prevMessages","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","display","marginBottom","justifyContent","src","alt","width","height","borderRadius","marginLeft","marginRight","backgroundColor","color","padding","maxWidth","wordWrap","toLocaleString","marginTop","type","value","onChange","e","target","placeholder","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/BeerCasus/BeerCasus/.git/SoulConnect/Frontend/soulconnect/src/Berichten/bericht.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { messages as initialMessages } from './messages'; // Import initial messages\r\n\r\nfunction ChatPage() {\r\n  const { messageId } = useParams(); // Retrieve the messageId from the URL\r\n  const [messages, setMessages] = useState(initialMessages); // Use state for messages\r\n  const [newMessage, setNewMessage] = useState(''); // State for the new message input\r\n\r\n  // Filter messages for the current contact\r\n  const contactMessages = messages.filter(\r\n    (msg) =>\r\n      (msg.sender === messageId && msg.receiver === 'You') ||\r\n      (msg.receiver === messageId && msg.sender === 'You')\r\n  );\r\n\r\n  // Sort messages by timestamp\r\n  const sortedMessages = contactMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n  // Handle sending a new message\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim() === '') return; // Prevent empty messages\r\n\r\n    // Create a new message object\r\n    const newMessageObject = {\r\n      id: messages.length + 1, // Generate a new ID (can be replaced later with backend ID)\r\n      sender: 'You',\r\n      receiver: messageId,\r\n      message: newMessage,\r\n      timestamp: new Date().toISOString(), // Current timestamp\r\n      profilePicture: '/path-to-your-profile-picture.jpg', // Replace with an actual path or logic\r\n    };\r\n\r\n    // Update the state to include the new message\r\n    setMessages((prevMessages) => [...prevMessages, newMessageObject]);\r\n    setNewMessage(''); // Clear the input field\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat with {messageId}</h2>\r\n      <div>\r\n        {sortedMessages.map((msg) => (\r\n          <div\r\n            key={msg.id}\r\n            style={{\r\n              display: 'flex',\r\n              marginBottom: '10px',\r\n              justifyContent: msg.sender === 'You' ? 'flex-end' : 'flex-start',\r\n            }}\r\n          >\r\n            <img\r\n              src={msg.profilePicture}\r\n              alt={`${msg.sender}'s profile`}\r\n              style={{\r\n                width: '50px',\r\n                height: '50px',\r\n                borderRadius: '50%',\r\n                marginLeft: msg.sender === 'You' ? '0' : '10px',\r\n                marginRight: msg.sender === 'You' ? '10px' : '0',\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                backgroundColor: msg.sender === 'You' ? '#007bff' : '#f1f1f1',\r\n                color: msg.sender === 'You' ? 'white' : 'black',\r\n                padding: '10px',\r\n                borderRadius: '10px',\r\n                maxWidth: '70%',\r\n                wordWrap: 'break-word',\r\n              }}\r\n            >\r\n              <p>{msg.message}</p>\r\n              <small>{new Date(msg.timestamp).toLocaleString()}</small>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input for new messages */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message\"\r\n          style={{ width: '80%', padding: '10px', marginRight: '10px' }}\r\n        />\r\n        <button onClick={handleSendMessage} style={{ padding: '10px 20px', cursor: 'pointer' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}