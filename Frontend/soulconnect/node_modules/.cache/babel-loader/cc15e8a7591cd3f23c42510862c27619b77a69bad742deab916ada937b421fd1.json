{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch('http://localhost:3001/users', {\n      // Vervang door de URL van je backend API\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer s4rTAy9VEa4/Uj1Hzqa02d45rf' // Voeg je API-sleutel toe aan de headers\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Succesvol ingelogd', data);\n      navigate('/landpage'); // Stuur gebruiker door naar Landpage.js\n    } else {\n      console.log('Ongeldige inloggegevens');\n      alert('E-mail of wachtwoord is onjuist. Probeer het opnieuw.');\n    }\n  } catch (error) {\n    console.error('Er is een fout opgetreden:', error);\n    alert('Er is een fout opgetreden. Probeer het later opnieuw.');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","password","ok","data","json","console","log","navigate","alert","error"],"sources":["C:/Xampp/htdocs/SoulConnect/SoulConnect-Frontend/Frontend/soulconnect/src/pages/Login/Login.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:3001/users', { // Vervang door de URL van je backend API\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer s4rTAy9VEa4/Uj1Hzqa02d45rf', // Voeg je API-sleutel toe aan de headers\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Succesvol ingelogd', data);\r\n            navigate('/landpage'); // Stuur gebruiker door naar Landpage.js\r\n        } else {\r\n            console.log('Ongeldige inloggegevens');\r\n            alert('E-mail of wachtwoord is onjuist. Probeer het opnieuw.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Er is een fout opgetreden:', error);\r\n        alert('Er is een fout opgetreden. Probeer het later opnieuw.');\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,mCAAmC,CAAE;MAC1D,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC;MACvCI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACHF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCE,KAAK,CAAC,uDAAuD,CAAC;IAClE;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDD,KAAK,CAAC,uDAAuD,CAAC;EAClE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}